public class Sudoku2{
static int[][] grid = new int[9][9];
    
    static boolean isValid(int row, int col, int sq, int num){
        if(!containsRow(grid[row], num) && !containsCol(col, num) && !containsSq(sq, num)) 
            return true;
        else return false;
    }
    
    static boolean containsRow(int[] row, int n){
        for(int i = 0; i < row.length; i++){
            if(row[i] == n) return true;
        }
        return false;
    }
    
    static boolean containsCol(int col, int n){
        for(int i = 0; i < 9; i++){
            if(grid[i][col] == n) return true;
        }
        return false;
    }
    
    static boolean containsSq(int sq, int n){
        int rowinc, colinc;
        switch(sq){
            case 0: rowinc = 0;
                    colinc = 0;
                    break;
            case 1: rowinc = 0;
                    colinc = 3;
                    break;
            case 2: rowinc = 0;
                    colinc = 6;
                    break;
            case 3: rowinc = 3;
                    colinc = 0;
                    break;
            case 4: rowinc = 3;
                    colinc = 3;
                    break;
            case 5: rowinc = 3;
                    colinc = 6;
                    break;
            case 6: rowinc = 6;
                    colinc = 0;
                    break;
            case 7: rowinc = 6;
                    colinc = 3;
                    break;
            case 8: rowinc = 6;
                    colinc = 6;
                    break;
            default: rowinc = -1;
                     colinc = -1;
                     break;
        }
        
        for(int i = rowinc; i < rowinc + 3; i++){
            for(int j = colinc; j < colinc + 3; j++){
                if(grid[i][j] == n) return true;
            }
        }
        return false;
    }
    
    static int quadrant(int row, int col){
        if(row < 3){
            if(col < 3) return 0;
            else if(col >=3 && col < 6) return 1;
            else return 2;
        }
        else if(row >= 3 && row < 6){
            if(col < 3) return 3;
            else if(col >= 3 && col < 6) return 4;
            else return 5;
        }
        else{
            if(col < 3) return 6;
            else if(col >= 3 && col < 6) return 7;
            else return 8;
        }
    }
    
    static void display(){
        for(int i = 0; i < 9; i++){
            for(int j = 0; j < 9; j++){
                System.out.print(grid[i][j] + " ");
            }
            System.out.println();
        }
    }
    
    static void fill(int row, int col, int start){
        if(row == 9) return;
        
        for(int n = start; n <= 9; n++){
            display();
            System.out.println();
            int sq = quadrant(row, col);
            if(isValid(row, col, sq, n)){
                grid[row][col] = n;
                if(col == 8)  fill(row+1, 0, 1);
                else  fill (row, col+1, 1);
            }
            else{
                System.out.println("d" + row + " " + col);
                grid[row][col] = 0;
                if(col == 0)  fill(row-1, 8, grid[row-1][8]);
                else  fill(row, col-1, grid[row] [col-1]);
            }
        }
    }
    
    public static void main(String[] args){
        fill(0,0,1);
    }
}
